{"version":3,"sources":["webpack:///../packages/react-runner/src/utils.js","webpack:///../packages/react-runner/src/Runner.js","webpack:///../packages/react-runner/src/useRunner.js","webpack:///../packages/react-live-runner/src/LiveRunner.js","webpack:///../packages/react-live-runner/src/useLiveRunner.js","webpack:///../packages/react-live-runner/src/theme.js","webpack:///../packages/react-live-runner/src/CodeEditor.js","webpack:///../packages/react-live-runner/src/LiveContext.js","webpack:///../packages/react-live-runner/src/LiveProvider.js","webpack:///../packages/react-live-runner/src/LiveEditor.js","webpack:///../packages/react-live-runner/src/LivePreview.js","webpack:///../packages/react-live-runner/src/LiveError.js","webpack:///./src/components/LiveRunner.js","webpack:///./examples.js","webpack:///./src/pages/index.js","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js"],"names":["generateElement","options","errorCallback","code","scope","type","trimmedCode","trim","Element","_React$Component","ErrorBoundary","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","state","error","inheritsLoose_default","_proto","prototype","componentDidCatch","setState","toString","render","react_default","a","createElement","React","Component","withErrorBoundary","scopeKeys","Object","keys","scopeValues","map","key","construct_default","Function","evalCode","transform","exportRegexp","renderRegexp","test","replace","Fragment","prepareCode","transforms","filter","Boolean","production","substr","assign","transpile","element","err","Runner","_this$props","props","_transpile","componentDidMount","componentDidUpdate","prevProps","_this$props2","children","_this$state","propTypes","PropTypes","func","isRequired","string","object","oneOf","LiveRunner","getState","handleChange","sourceCode","_this2","Runner_Runner","_ref","onChange","colors","theme","plain","color","backgroundColor","styles","types","style","fontWeight","fontStyle","cursor","opacity","CodeEditor","highlightCode","language","es","Prism","tokens","getLineProps","getTokenProps","line","i","token","rest","objectWithoutPropertiesLoose_default","lib_default","padding","value","highlight","onValueChange","whiteSpace","fontFamily","defaultProps","defaultTheme","LiveContext","createContext","LiveProvider","transformCode","transformedCode","LiveRunner_LiveRunner","src_LiveContext","Provider","LiveEditor","Consumer","CodeEditor_CodeEditor","LivePreview","_ref2","node","elementType","LiveError","Container","styled","div","withConfig","displayName","componentId","EditorContainer","Editor","PreviewContainer","Preview","Error","as","LiveRunner_Error","examples","title","codeBlock","_templateObject","_templateObject2","_templateObject3","css","_templateObject4","_templateObject5","Title","h3","Page","Layout","id","components_LiveRunner","header","Nav","nav","Link","h1","Header","href","GlobalStyle","createGlobalStyle","Body","Content","Layout_Container","Helmet_default","meta","name","content","components_Header"],"mappings":"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","file":"component---src-pages-index-js-52c628e3f4c410712d60.js","sourcesContent":["import React from 'react'\nimport { transform } from 'sucrase'\n\nconst evalCode = (code, scope) => {\n  const scopeKeys = Object.keys(scope)\n  const scopeValues = scopeKeys.map(key => scope[key])\n  // eslint-disable-next-line no-new-func\n  const fn = new Function(...scopeKeys, code)\n  return fn(...scopeValues)\n}\n\nconst prepareCode = code => {\n  const exportRegexp = /\\bexport default\\b/gm\n  const renderRegexp = /\\brender(\\([^)])/gm\n  const elementRegexp = /^<.+>/g\n\n  // export default Component\n  if (exportRegexp.test(code)) return code.replace(exportRegexp, 'return')\n  // render(<Component />)\n  if (renderRegexp.test(code)) return code.replace(renderRegexp, 'return $1')\n  // remove trailing comma for expression\n  code = code.replace(/;$/, '')\n  // inline elements\n  if (elementRegexp.test(code) && React.Fragment) code = `<>${code}</>`\n  return `return (${code})`\n}\n\nconst withErrorBoundary = (Element, errorCallback) => {\n  return class ErrorBoundary extends React.Component {\n    state = {\n      error: null,\n    }\n\n    componentDidCatch(error) {\n      this.setState({ error })\n      errorCallback(error.toString())\n    }\n\n    render() {\n      if (this.state.error) return null\n      return typeof Element === 'function' ? <Element /> : Element\n    }\n  }\n}\n\nexport const generateElement = (options, errorCallback = () => {}) => {\n  const { code, scope, type } = options\n  const trimmedCode = code ? code.trim() : ''\n  if (!trimmedCode) return null\n\n  const transformedCode = transform(prepareCode(trimmedCode), {\n    transforms: [\n      'jsx',\n      'imports',\n      type === 'typescript' && 'typescript',\n      type === 'flow' && 'flow',\n    ].filter(Boolean),\n    production: true,\n  }).code.substr(13)\n  const result = evalCode(transformedCode, { React, ...scope })\n  const Element = withErrorBoundary(result, errorCallback)\n\n  return <Element />\n}\n\nexport const transpile = (options, errorCallback) => {\n  let element = null\n  let error = null\n  try {\n    element = generateElement(options, errorCallback)\n  } catch (err) {\n    error = err.toString()\n  }\n\n  return { element, error }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { transpile } from './utils'\n\nexport default class Runner extends React.Component {\n  state = {\n    error: null,\n    element: null,\n  }\n\n  transpile = () => {\n    const { code, scope, type } = this.props\n\n    const { element, error } = transpile({ code, scope, type }, error => {\n      this.setState({ error, element: null })\n    })\n    this.setState({ element, error })\n  }\n\n  componentDidMount() {\n    this.transpile()\n  }\n\n  componentDidUpdate(prevProps) {\n    const { code, scope, type } = this.props\n    if (\n      code !== prevProps.code ||\n      scope !== prevProps.scope ||\n      type !== prevProps.type\n    ) {\n      this.transpile()\n    }\n  }\n\n  render() {\n    const { children } = this.props\n    const { element, error } = this.state\n\n    return children({\n      element,\n      error,\n    })\n  }\n}\n\nRunner.propTypes = {\n  children: PropTypes.func.isRequired,\n  code: PropTypes.string.isRequired,\n  scope: PropTypes.object,\n  type: PropTypes.oneOf(['typescript', 'flow']),\n}\n","import { useState, useMemo, useEffect } from 'react'\nimport { transpile } from './utils'\n\nconst useRunner = ({ code, scope, type }) => {\n  if (!useState) throw new Error('Require React 16.8 or above to use hooks')\n\n  // memoize scope to avoid effect loop\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const memoScope = useMemo(() => scope, [scope && Object.keys(scope).join()])\n  const [state, setState] = useState({ element: null, error: null })\n  useEffect(() => {\n    const { element, error } = transpile(\n      { code, scope: memoScope, type },\n      error => {\n        setState({ error, element: null })\n      }\n    )\n    setState({ element, error })\n  }, [code, memoScope, type])\n\n  return state\n}\n\nexport default useRunner\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Runner from 'react-runner'\n\nexport default class LiveRunner extends React.Component {\n  state = this.getState()\n\n  getState() {\n    const { sourceCode } = this.props\n\n    return {\n      code: sourceCode ? sourceCode.trim() : '',\n    }\n  }\n\n  handleChange = code => {\n    this.setState({ code })\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.sourceCode !== prevProps.sourceCode) {\n      this.setState(this.getState())\n    }\n  }\n\n  render() {\n    const { children, scope, type } = this.props\n    const { code } = this.state\n    return (\n      <Runner code={code} scope={scope} type={type}>\n        {({ element, error }) =>\n          children({\n            element,\n            error,\n            code,\n            onChange: this.handleChange,\n          })\n        }\n      </Runner>\n    )\n  }\n}\n\nLiveRunner.propTypes = {\n  children: PropTypes.func.isRequired,\n  sourceCode: PropTypes.string.isRequired,\n  scope: PropTypes.object,\n  type: PropTypes.oneOf(['typescript', 'flow']),\n}\n","import { useState, useEffect } from 'react'\nimport { useRunner } from 'react-runner'\n\nconst useLiveRunner = ({ sourceCode, scope, type }) => {\n  const [code, onChange] = useState(sourceCode)\n  const { element, error } = useRunner({ code, scope, type })\n\n  useEffect(() => {\n    onChange(sourceCode)\n  }, [sourceCode])\n\n  return { element, error, code, onChange }\n}\n\nexport default useLiveRunner\n","const colors = {\n  white: '#ffffff',\n  dark: '#282c34',\n  char: '#d8dee9',\n  comment: '#b2b2b2',\n  keyword: '#c5a5c5',\n  primitive: '#5a9bcf',\n  string: '#8dc891',\n  variable: '#d7deea',\n  boolean: '#ff8b50',\n  punctuation: '#88c6Be',\n  tag: '#fc929e',\n  function: '#79b6f2',\n  className: '#fac863',\n  method: '#6699cc',\n  operator: '#fc929e',\n}\n\nconst theme = {\n  plain: {\n    color: colors.white,\n    backgroundColor: colors.dark,\n  },\n  styles: [\n    {\n      types: ['comment', 'block-comment', 'prolog', 'doctype', 'cdata'],\n      style: {\n        color: colors.comment,\n      },\n    },\n    {\n      types: [\n        'property',\n        'number',\n        'function-name',\n        'constant',\n        'symbol',\n        'deleted',\n      ],\n      style: {\n        color: colors.comment,\n      },\n    },\n    {\n      types: ['boolean'],\n      style: {\n        color: colors.boolean,\n      },\n    },\n    {\n      types: ['tag'],\n      style: {\n        color: colors.tag,\n      },\n    },\n    {\n      types: ['string'],\n      style: {\n        color: colors.string,\n      },\n    },\n    {\n      types: ['punctuation'],\n      style: {\n        color: colors.punctuation,\n      },\n    },\n    {\n      types: ['selector', 'char', 'builtin', 'inserted'],\n      style: {\n        color: colors.char,\n      },\n    },\n    {\n      types: ['function'],\n      style: {\n        color: colors.function,\n      },\n    },\n    {\n      types: ['operator', 'entity', 'url', 'variable'],\n      style: {\n        color: colors.variable,\n      },\n    },\n    {\n      types: ['keyword'],\n      style: {\n        color: colors.keyword,\n      },\n    },\n    {\n      types: ['class-name'],\n      style: {\n        color: colors.className,\n      },\n    },\n    {\n      types: ['important'],\n      style: {\n        fontWeight: 400,\n      },\n    },\n    {\n      types: ['bold'],\n      style: {\n        fontWeight: 700,\n      },\n    },\n    {\n      types: ['italic'],\n      style: {\n        fontStyle: 'italic',\n      },\n    },\n    {\n      types: ['entity'],\n      style: {\n        cursor: 'help',\n      },\n    },\n    {\n      types: ['namespace'],\n      style: {\n        opacity: 0.7,\n      },\n    },\n  ],\n}\n\nexport default theme\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Editor from 'react-simple-code-editor'\nimport Highlight, { Prism } from 'prism-react-renderer'\nimport defaultTheme from './theme'\n\nexport default class CodeEditor extends React.Component {\n  highlightCode = code => {\n    const { language, theme } = this.props\n\n    return (\n      <Highlight code={code} language={language} Prism={Prism} theme={theme}>\n        {({ tokens, getLineProps, getTokenProps }) => (\n          <>\n            {tokens.map((line, i) => (\n              <div {...getLineProps({ line, key: i })}>\n                {line.map((token, key) => (\n                  <span {...getTokenProps({ token, key })} />\n                ))}\n              </div>\n            ))}\n          </>\n        )}\n      </Highlight>\n    )\n  }\n\n  render() {\n    const { code, language, theme, style, onChange, ...rest } = this.props\n\n    return (\n      <Editor\n        padding={10}\n        value={code || ''}\n        highlight={this.highlightCode}\n        onValueChange={onChange}\n        style={{\n          whiteSpace: 'pre',\n          fontFamily:\n            'source-code-pro, Menlo, Monaco, Consolas, Courier New, monospace',\n          ...(theme && typeof theme.plain === 'object' ? theme.plain : {}),\n          ...style,\n        }}\n        {...rest}\n      />\n    )\n  }\n}\n\nCodeEditor.defaultProps = {\n  language: 'jsx',\n  theme: defaultTheme,\n  onChange: () => {},\n}\n\nCodeEditor.propTypes = {\n  code: PropTypes.string,\n  language: PropTypes.string,\n  theme: PropTypes.object,\n  style: PropTypes.object,\n  onChange: PropTypes.func,\n}\n","import createContext from 'create-react-context'\n\nconst LiveContext = createContext({})\n\nexport default LiveContext\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport LiveContext from './LiveContext'\nimport LiveRunner from './LiveRunner'\n\nexport default function LiveProvider(props) {\n  const { children, code, scope, type, language, theme, transformCode } = props\n  const transformedCode = transformCode ? transformCode(code) : code\n\n  return (\n    <LiveRunner sourceCode={transformedCode} scope={scope} type={type}>\n      {({ element, error, code, onChange }) => (\n        <LiveContext.Provider\n          value={{ element, error, code, language, type, theme, onChange }}\n        >\n          {children}\n        </LiveContext.Provider>\n      )}\n    </LiveRunner>\n  )\n}\n\nLiveProvider.defaultProps = {\n  code: '',\n  language: 'jsx',\n}\n\nLiveProvider.propTypes = {\n  children: PropTypes.node,\n  code: PropTypes.string,\n  scope: PropTypes.object,\n  type: PropTypes.string,\n  language: PropTypes.string,\n  theme: PropTypes.object,\n  transformCode: PropTypes.func,\n}\n","import React from 'react'\nimport LiveContext from './LiveContext'\nimport CodeEditor from './CodeEditor'\n\nexport default function LiveEditor(props) {\n  return (\n    <LiveContext.Consumer>\n      {({ code, language, theme, onChange }) => (\n        <CodeEditor\n          code={code}\n          language={language}\n          theme={theme}\n          onChange={onChange}\n          {...props}\n        />\n      )}\n    </LiveContext.Consumer>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport LiveContext from './LiveContext'\n\nfunction LivePreview({ Component, ...rest }) {\n  return (\n    <LiveContext.Consumer>\n      {({ element }) => <Component {...rest}>{element}</Component>}\n    </LiveContext.Consumer>\n  )\n}\n\nLivePreview.defaultProps = {\n  Component: 'div',\n}\n\nLivePreview.propTypes = {\n  Component: PropTypes.elementType,\n}\n\nexport default LivePreview\n","import React from 'react'\nimport LiveContext from './LiveContext'\n\nexport default function LiveError(props) {\n  return (\n    <LiveContext.Consumer>\n      {({ error }) => (error ? <pre {...props}>{error}</pre> : null)}\n    </LiveContext.Consumer>\n  )\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useRunner } from 'react-runner'\nimport {\n  LiveProvider,\n  LiveEditor,\n  LivePreview,\n  LiveError,\n  CodeEditor,\n  useLiveRunner,\n} from 'react-live-runner'\n\nconst Container = styled.div`\n  display: flex;\n  box-shadow: 0 0 8px 0 lightsteelblue;\n  height: 250px;\n  overflow: hidden;\n`\n\nconst EditorContainer = styled.div`\n  flex: 1;\n  overflow: auto;\n`\n\nconst Editor = styled(CodeEditor)`\n  font-size: 14px;\n  white-space: pre;\n  caret-color: #fff;\n  min-width: 100%;\n  min-height: 100%;\n  float: left;\n\n  & > textarea,\n  & > pre {\n    outline: none;\n    white-space: pre !important;\n  }\n`\n\nconst PreviewContainer = styled.div`\n  flex: 1;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #fff;\n  overflow: auto;\n`\n\nconst Preview = styled.div`\n  margin: auto;\n  text-align: center;\n`\n\nconst Error = styled.div`\n  background: #fcc;\n  position: absolute;\n  top: 0;\n  left: 0;\n  min-width: 100%;\n  margin: 0;\n  padding: 10px;\n  color: #f00;\n  white-space: pre-wrap;\n`\n\nexport const LiveRunner = props => (\n  <LiveProvider {...props}>\n    <Container>\n      <EditorContainer>\n        <Editor as={LiveEditor} />\n      </EditorContainer>\n      <PreviewContainer>\n        <Preview as={LivePreview} />\n        <Error as={LiveError} />\n      </PreviewContainer>\n    </Container>\n  </LiveProvider>\n)\n\nexport const UseLiveRunner = ({ code: sourceCode, scope, type, language }) => {\n  const { element, error, code, onChange } = useLiveRunner({\n    sourceCode,\n    scope,\n    type,\n  })\n\n  return (\n    <Container>\n      <EditorContainer>\n        <Editor code={code} language={language} onChange={onChange} />\n      </EditorContainer>\n      <PreviewContainer>\n        {error && <Error>{error}</Error>}\n        <Preview>{element}</Preview>\n      </PreviewContainer>\n    </Container>\n  )\n}\n\nexport const UseRunner = ({ code: sourceCode, scope, type, language }) => {\n  const [code, setCode] = useState((sourceCode || '').trim())\n  const { element, error } = useRunner({ code, scope })\n\n  return (\n    <Container>\n      <EditorContainer>\n        <Editor code={code} language={language} onChange={setCode} />\n      </EditorContainer>\n      <PreviewContainer>\n        {error && <Error>{error}</Error>}\n        <Preview>{element}</Preview>\n      </PreviewContainer>\n    </Container>\n  )\n}\n\nexport default LiveRunner\n","import styled, { css } from 'styled-components'\nimport { codeBlock } from 'common-tags'\n\nexport default [\n  {\n    key: 'inline-elements',\n    title: 'Inline elements',\n    code: codeBlock`\n    <div>Hello</div>\n    <div>react-runner</div>\n    `,\n  },\n  {\n    key: 'function-component',\n    title: 'Function Component',\n    code: codeBlock`\n    () => {\n      const [count, setCount] = React.useState(0)\n\n      return (\n        <>\n          <div>{count}</div>\n          <button onClick={() => setCount(count => count + 1)}>+</button>\n          <button onClick={() => setCount(count => count - 1)}>-</button>\n        </>\n      )\n    }\n    `,\n  },\n  {\n    key: 'class-component',\n    title: 'Class Component with fields support',\n    code: codeBlock`\n    class Counter extends React.Component {\n      state = {\n        count: 0,\n      }\n\n      onIncrement = () => {\n        this.setState(({ count }) => ({\n          count: count + 1,\n        }))\n      }\n\n      onDecrement = () => {\n        this.setState(({ count }) => ({\n          count: count - 1,\n        }))\n      }\n\n      render() {\n        return (\n          <div>\n            <div>{this.state.count}</div>\n            <button onClick={this.onIncrement}>+</button>\n            <button onClick={this.onDecrement}>-</button>\n          </div>\n        )\n      }\n    }\n    `,\n  },\n  {\n    key: 'export-default',\n    title: 'export default Component',\n    scope: { styled, css },\n    code: codeBlock`\n    const Button = styled.button\\`\n      background: transparent;\n      color: steelblue;\n      border: 2px solid steelblue;\n      margin: 5px 10px;\n      padding: 5px 10px;\n      font-size: 16px;\n      border-radius: 4px;\n\n      \\${props => props.primary && css\\`\n        background: steelblue;\n        color: white;\n      \\`}\n    \\`\n\n    render(\n      <>\n        <Button>Normal Button</Button>\n        <Button primary>Primary Button</Button>\n      </>\n    )\n    `,\n  },\n  {\n    key: 'render',\n    title: 'render(<Component />)',\n    scope: { styled, css },\n    code: codeBlock`\n    const Button = styled.button\\`\n      background: transparent;\n      color: steelblue;\n      border: 2px solid steelblue;\n      margin: 5px 10px;\n      padding: 5px 10px;\n      font-size: 16px;\n      border-radius: 4px;\n\n      \\${props => props.primary && css\\`\n        background: steelblue;\n        color: white;\n      \\`}\n    \\`\n\n    render(\n      <>\n        <Button>Normal Button</Button>\n        <Button primary>Primary Button</Button>\n      </>\n    )\n    `,\n  },\n]\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Layout from '../components/Layout'\nimport LiveRunner from '../components/LiveRunner'\nimport examples from '../../examples'\n\nconst Title = styled.h3`\n  color: steelblue;\n`\n\nconst Page = () => (\n  <Layout>\n    {examples.map(({ key, title, code, scope }) => (\n      <React.Fragment key={key}>\n        <Title id={key}>{title}</Title>\n        <LiveRunner code={code} scope={scope} />\n      </React.Fragment>\n    ))}\n  </Layout>\n)\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.header`\n  background: steelblue;\n  color: #fff;\n`\n\nconst Nav = styled.nav`\n  height: 50px;\n  max-width: 900px;\n  margin: auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst Link = styled.a`\n  color: #fff;\n  text-decoration: none;\n\n  &:hover {\n    color: #eee;\n  }\n`\n\nconst Title = styled.h1`\n  margin: 10px 0;\n`\n\nconst Header = () => (\n  <Container>\n    <Nav>\n      <Link href=\"https://nihgwu.github.io/react-runner/\">\n        <Title>react-runner</Title>\n      </Link>\n      <Link href=\"https://github.com/nihgwu/react-runner\">Github</Link>\n    </Nav>\n  </Container>\n)\n\nexport default Header\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport styled, { createGlobalStyle } from 'styled-components'\n\nimport Header from './Header'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: sans-serif;\n    font-size: 16px;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`\n\nconst Body = styled.div`\n  flex: 1;\n  overflow-y: auto;\n`\n\nconst Content = styled.div`\n  margin: 20px auto;\n  max-width: 900px;\n`\n\nconst Layout = ({ children }) => (\n  <Container>\n    <GlobalStyle />\n    <Helmet\n      title=\"react-runner\"\n      meta={[\n        {\n          name: 'description',\n          content: 'Preview your React component the easy way',\n        },\n        {\n          name: 'keywords',\n          content: 'react, component, preview, runner, live',\n        },\n      ]}\n    />\n    <Header />\n    <Body>\n      <Content>{children}</Content>\n    </Body>\n  </Container>\n)\n\nexport default Layout\n"],"sourceRoot":""}