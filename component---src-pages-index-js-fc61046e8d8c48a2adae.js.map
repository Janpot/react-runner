{"version":3,"sources":["webpack:///../packages/react-runner/src/utils.js","webpack:///../packages/react-runner/src/Runner.js","webpack:///../packages/react-runner/src/useRunner.js","webpack:///../packages/react-live-runner/src/LiveRunner.js","webpack:///../packages/react-live-runner/src/useLiveRunner.js","webpack:///../packages/react-live-runner/src/CodeEditor.js","webpack:///../packages/react-live-runner/src/LiveContext.js","webpack:///../packages/react-live-runner/src/LiveProvider.js","webpack:///../packages/react-live-runner/src/LiveEditor.js","webpack:///../packages/react-live-runner/src/LivePreview.js","webpack:///../packages/react-live-runner/src/LiveError.js","webpack:///./src/components/LiveRunner.js","webpack:///./examples.js","webpack:///./src/pages/index.js","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js"],"names":["generateElement","_ref","errorCallback","code","scope","type","trimmedCode","trim","Element","_React$Component","ErrorBoundary","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","state","error","inheritsLoose_default","_proto","prototype","componentDidCatch","setState","render","react_default","a","createElement","React","Component","errorBoundary","scopeKeys","Object","keys","scopeValues","values","construct_default","Function","evalCode","transform","exportRegexp","renderRegexp","test","replace","Fragment","prepareCode","transforms","filter","Boolean","production","substr","assign","setTimeout","Runner","element","transpile","_this$props","props","componentDidMount","componentDidUpdate","prevProps","_this$props2","children","_this$state","propTypes","PropTypes","func","isRequired","string","object","oneOf","LiveRunner","getState","handleChange","sourceCode","_this2","Runner_Runner","onChange","CodeEditor","highlightCode","language","theme","es","Prism","tokens","getLineProps","getTokenProps","map","line","i","key","token","style","rest","objectWithoutPropertiesLoose_default","lib_default","padding","value","highlight","onValueChange","whiteSpace","fontFamily","plain","defaultProps","vsDarkPlus","LiveContext","createContext","LiveProvider","transformCode","transformedCode","LiveRunner_LiveRunner","src_LiveContext","Provider","LiveEditor","Consumer","CodeEditor_CodeEditor","LivePreview","_ref2","node","elementType","LiveError","toString","Container","styled","div","withConfig","displayName","componentId","EditorContainer","Editor","PreviewContainer","Preview","Error","as","LiveRunner_Error","examples","title","codeBlock","_templateObject","_templateObject2","_templateObject3","css","_templateObject4","_templateObject5","Title","h3","Page","Layout","id","components_LiveRunner","header","Nav","nav","Link","h1","Header","href","GlobalStyle","createGlobalStyle","Body","Content","Layout_Container","Helmet_default","meta","name","content","components_Header"],"mappings":"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","file":"component---src-pages-index-js-fc61046e8d8c48a2adae.js","sourcesContent":["import React from 'react'\nimport { transform } from 'sucrase'\n\nconst evalCode = (code, scope) => {\n  const scopeKeys = Object.keys(scope)\n  const scopeValues = Object.values(scope)\n  // eslint-disable-next-line no-new-func\n  const fn = new Function(...scopeKeys, code)\n  return fn(...scopeValues)\n}\n\nconst prepareCode = code => {\n  const exportRegexp = /\\bexport default\\b/gm\n  const renderRegexp = /\\brender(\\([^)])/gm\n  const elementRegexp = /^<.+>/g\n\n  // export default Component\n  if (exportRegexp.test(code)) return code.replace(exportRegexp, 'return')\n  // render(<Component />)\n  if (renderRegexp.test(code)) return code.replace(renderRegexp, 'return $1')\n  // remove trailing comma for expression\n  code = code.replace(/;$/, '')\n  // inline elements\n  if (elementRegexp.test(code) && React.Fragment) code = `<>${code}</>`\n  return `return (${code})`\n}\n\nconst errorBoundary = (Element, errorCallback) => {\n  return class ErrorBoundary extends React.Component {\n    state = {\n      error: null,\n    }\n\n    componentDidCatch(error) {\n      this.setState({ error })\n      errorCallback(error)\n    }\n\n    render() {\n      if (this.state.error) return null\n      return typeof Element === 'function' ? <Element /> : Element\n    }\n  }\n}\n\nexport const generateElement = (\n  { code, scope, type },\n  errorCallback = () => {}\n) => {\n  try {\n    const trimmedCode = code ? code.trim() : ''\n    if (!trimmedCode) return null\n\n    const transformedCode = transform(prepareCode(trimmedCode), {\n      transforms: [\n        'jsx',\n        'imports',\n        type === 'typescript' && 'typescript',\n        type === 'flow' && 'flow',\n      ].filter(Boolean),\n      production: true,\n    }).code.substr(13)\n    const Element = errorBoundary(\n      evalCode(transformedCode, { React, ...scope }),\n      errorCallback\n    )\n    return <Element />\n  } catch (error) {\n    // run after return\n    setTimeout(errorCallback, 0, error)\n    return null\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { generateElement } from './utils'\n\nexport default class Runner extends React.Component {\n  state = {\n    error: null,\n    element: null,\n  }\n\n  transpile = () => {\n    const { code, scope, type } = this.props\n    const element = generateElement({ code, scope, type }, error => {\n      this.setState({ error, element: null })\n    })\n    this.setState({ element, error: null })\n  }\n\n  componentDidMount() {\n    this.transpile()\n  }\n\n  componentDidUpdate(prevProps) {\n    const { code, scope, type } = this.props\n    if (\n      code !== prevProps.code ||\n      scope !== prevProps.scope ||\n      type !== prevProps.type\n    ) {\n      this.transpile()\n    }\n  }\n\n  render() {\n    const { children } = this.props\n    const { element, error } = this.state\n\n    return children({\n      element,\n      error,\n    })\n  }\n}\n\nRunner.propTypes = {\n  children: PropTypes.func.isRequired,\n  code: PropTypes.string.isRequired,\n  scope: PropTypes.object,\n  type: PropTypes.oneOf(['typescript', 'flow']),\n}\n","import { useState, useEffect } from 'react'\nimport { generateElement } from './utils'\n\nconst useRunner = ({ code, scope, type }) => {\n  if (!useState) throw new Error('Require React 16.8 or above to use hooks')\n\n  const [state, setState] = useState({ element: null, error: null })\n  useEffect(() => {\n    const element = generateElement({ code, scope, type }, error => {\n      setState({ error, element: null })\n    })\n    setState({ element, error: null })\n  }, [code, scope, type])\n\n  return state\n}\n\nexport default useRunner\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Runner from 'react-runner'\n\nexport default class LiveRunner extends React.Component {\n  state = this.getState()\n\n  getState() {\n    const { sourceCode } = this.props\n\n    return {\n      code: sourceCode ? sourceCode.trim() : '',\n    }\n  }\n\n  handleChange = code => {\n    this.setState({ code })\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.sourceCode !== prevProps.sourceCode) {\n      this.setState(this.getState())\n    }\n  }\n\n  render() {\n    const { children, scope, type } = this.props\n    const { code } = this.state\n    return (\n      <Runner code={code} scope={scope} type={type}>\n        {({ element, error }) =>\n          children({\n            element,\n            error,\n            code,\n            onChange: this.handleChange,\n          })\n        }\n      </Runner>\n    )\n  }\n}\n\nLiveRunner.propTypes = {\n  children: PropTypes.func.isRequired,\n  sourceCode: PropTypes.string.isRequired,\n  scope: PropTypes.object,\n  type: PropTypes.oneOf(['typescript', 'flow']),\n}\n","import { useState, useEffect } from 'react'\nimport { useRunner } from 'react-runner'\n\nconst useLiveRunner = ({ sourceCode, scope, type }) => {\n  const [code, onChange] = useState(sourceCode)\n  const { element, error } = useRunner({ code, scope, type })\n\n  useEffect(() => {\n    onChange(sourceCode)\n  }, [sourceCode])\n\n  return { element, error, code, onChange }\n}\n\nexport default useLiveRunner\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Editor from 'react-simple-code-editor'\nimport Highlight, { Prism } from 'prism-react-renderer'\nimport vsDarkPlus from 'prism-react-renderer/themes/vsDarkPlus'\n\nexport default class CodeEditor extends React.Component {\n  highlightCode = code => {\n    const { language, theme } = this.props\n\n    return (\n      <Highlight code={code} language={language} Prism={Prism} theme={theme}>\n        {({ tokens, getLineProps, getTokenProps }) => (\n          <>\n            {tokens.map((line, i) => (\n              <div {...getLineProps({ line, key: i })}>\n                {line.map((token, key) => (\n                  <span {...getTokenProps({ token, key })} />\n                ))}\n              </div>\n            ))}\n          </>\n        )}\n      </Highlight>\n    )\n  }\n\n  render() {\n    const { code, language, theme, style, onChange, ...rest } = this.props\n\n    return (\n      <Editor\n        padding={10}\n        value={code || ''}\n        highlight={this.highlightCode}\n        onValueChange={onChange}\n        style={{\n          whiteSpace: 'pre',\n          fontFamily: 'monospace',\n          ...(theme && typeof theme.plain === 'object' ? theme.plain : {}),\n          ...style,\n        }}\n        {...rest}\n      />\n    )\n  }\n}\n\nCodeEditor.defaultProps = {\n  language: 'jsx',\n  theme: vsDarkPlus,\n  onChange: () => {},\n}\n\nCodeEditor.propTypes = {\n  code: PropTypes.string,\n  language: PropTypes.string,\n  theme: PropTypes.object,\n  style: PropTypes.object,\n  onChange: PropTypes.func,\n}\n","import createContext from 'create-react-context'\n\nconst LiveContext = createContext({})\n\nexport default LiveContext\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport LiveContext from './LiveContext'\nimport LiveRunner from './LiveRunner'\n\nexport default function LiveProvider(props) {\n  const { children, code, scope, type, language, theme, transformCode } = props\n  const transformedCode = transformCode ? transformCode(code) : code\n\n  return (\n    <LiveRunner sourceCode={transformedCode} scope={scope} type={type}>\n      {({ element, error, code, onChange }) => (\n        <LiveContext.Provider\n          value={{ element, error, code, language, type, theme, onChange }}\n        >\n          {children}\n        </LiveContext.Provider>\n      )}\n    </LiveRunner>\n  )\n}\n\nLiveProvider.defaultProps = {\n  code: '',\n  language: 'jsx',\n}\n\nLiveProvider.propTypes = {\n  children: PropTypes.node,\n  code: PropTypes.string,\n  scope: PropTypes.object,\n  type: PropTypes.string,\n  language: PropTypes.string,\n  theme: PropTypes.object,\n  transformCode: PropTypes.func,\n}\n","import React from 'react'\nimport LiveContext from './LiveContext'\nimport CodeEditor from './CodeEditor'\n\nexport default function LiveEditor(props) {\n  return (\n    <LiveContext.Consumer>\n      {({ code, language, theme, onChange }) => (\n        <CodeEditor\n          code={code}\n          language={language}\n          theme={theme}\n          onChange={onChange}\n          {...props}\n        />\n      )}\n    </LiveContext.Consumer>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport LiveContext from './LiveContext'\n\nfunction LivePreview({ Component, ...rest }) {\n  return (\n    <LiveContext.Consumer>\n      {({ element }) => <Component {...rest}>{element}</Component>}\n    </LiveContext.Consumer>\n  )\n}\n\nLivePreview.defaultProps = {\n  Component: 'div',\n}\n\nLivePreview.propTypes = {\n  Component: PropTypes.elementType,\n}\n\nexport default LivePreview\n","import React from 'react'\nimport LiveContext from './LiveContext'\n\nexport default function LiveError(props) {\n  return (\n    <LiveContext.Consumer>\n      {({ error }) => (error ? <pre {...props}>{error.toString()}</pre> : null)}\n    </LiveContext.Consumer>\n  )\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useRunner } from 'react-runner'\nimport {\n  LiveProvider,\n  LiveEditor,\n  LivePreview,\n  LiveError,\n  CodeEditor,\n  useLiveRunner,\n} from 'react-live-runner'\n\nconst Container = styled.div`\n  display: flex;\n  box-shadow: 0 0 8px 0 lightsteelblue;\n  height: 250px;\n  overflow: hidden;\n`\n\nconst EditorContainer = styled.div`\n  flex: 1;\n  overflow: auto;\n`\n\nconst Editor = styled(CodeEditor)`\n  white-space: pre;\n  font-family: monospace;\n  background: #222;\n  caret-color: #fff;\n  min-width: 100%;\n  min-height: 100%;\n  float: left;\n\n  & > textarea,\n  & > pre {\n    outline: none;\n    white-space: pre !important;\n  }\n`\n\nconst PreviewContainer = styled.div`\n  flex: 1;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #fff;\n  overflow: auto;\n`\n\nconst Preview = styled.div`\n  margin: auto;\n  text-align: center;\n`\n\nconst Error = styled.div`\n  background: #fcc;\n  position: absolute;\n  top: 0;\n  left: 0;\n  min-width: 100%;\n  margin: 0;\n  padding: 10px;\n  color: #f00;\n  white-space: pre;\n`\n\nexport const LiveRunner = props => (\n  <LiveProvider {...props}>\n    <Container>\n      <EditorContainer>\n        <Editor as={LiveEditor} />\n      </EditorContainer>\n      <PreviewContainer>\n        <Preview as={LivePreview} />\n        <Error as={LiveError} />\n      </PreviewContainer>\n    </Container>\n  </LiveProvider>\n)\n\nexport const UseLiveRunner = ({ code: sourceCode, scope, type, language }) => {\n  const { element, error, code, onChange } = useLiveRunner({\n    sourceCode,\n    scope,\n    type,\n  })\n\n  return (\n    <Container>\n      <EditorContainer>\n        <Editor code={code} language={language} onChange={onChange} />\n      </EditorContainer>\n      <PreviewContainer>\n        {error ? (\n          <Error>{error.toString()}</Error>\n        ) : (\n          <Preview>{element}</Preview>\n        )}\n      </PreviewContainer>\n    </Container>\n  )\n}\n\nexport const UseRunner = ({ code: sourceCode, scope, type, language }) => {\n  const [code, setCode] = useState((sourceCode || '').trim())\n  const { element, error } = useRunner({ code, scope })\n\n  return (\n    <Container>\n      <EditorContainer>\n        <Editor code={code} language={language} onChange={setCode} />\n      </EditorContainer>\n      <PreviewContainer>\n        {error ? (\n          <Error>{error.toString()}</Error>\n        ) : (\n          <Preview>{element}</Preview>\n        )}\n      </PreviewContainer>\n    </Container>\n  )\n}\n\nexport default LiveRunner\n","import styled, { css } from 'styled-components'\nimport { codeBlock } from 'common-tags'\n\nexport default [\n  {\n    key: 'inline-elements',\n    title: 'Inline elements',\n    code: codeBlock`\n    <div>Hello</div>\n    <div>react-runner</div>\n    `,\n  },\n  {\n    key: 'function-component',\n    title: 'Function Component',\n    code: codeBlock`\n    () => {\n      const [count, setCount] = React.useState(0)\n\n      return (\n        <>\n          <div>{count}</div>\n          <button onClick={() => setCount(count => count + 1)}>+</button>\n          <button onClick={() => setCount(count => count - 1)}>-</button>\n        </>\n      )\n    }\n    `,\n  },\n  {\n    key: 'class-component',\n    title: 'Class Component with fields support',\n    code: codeBlock`\n    class Counter extends React.Component {\n      state = {\n        count: 0,\n      }\n\n      onIncrement = () => {\n        this.setState(({ count }) => ({\n          count: count + 1,\n        }))\n      }\n\n      onDecrement = () => {\n        this.setState(({ count }) => ({\n          count: count - 1,\n        }))\n      }\n\n      render() {\n        return (\n          <div>\n            <div>{this.state.count}</div>\n            <button onClick={this.onIncrement}>+</button>\n            <button onClick={this.onDecrement}>-</button>\n          </div>\n        )\n      }\n    }\n    `,\n  },\n  {\n    key: 'export-default',\n    title: 'export default Component',\n    scope: { styled, css },\n    code: codeBlock`\n    const Button = styled.button\\`\n      background: transparent;\n      color: steelblue;\n      border: 2px solid steelblue;\n      margin: 5px 10px;\n      padding: 5px 10px;\n      font-size: 16px;\n      border-radius: 4px;\n\n      \\${props => props.primary && css\\`\n        background: steelblue;\n        color: white;\n      \\`}\n    \\`\n\n    render(\n      <>\n        <Button>Normal Button</Button>\n        <Button primary>Primary Button</Button>\n      </>\n    )\n    `,\n  },\n  {\n    key: 'render',\n    title: 'render(<Component />)',\n    scope: { styled, css },\n    code: codeBlock`\n    const Button = styled.button\\`\n      background: transparent;\n      color: steelblue;\n      border: 2px solid steelblue;\n      margin: 5px 10px;\n      padding: 5px 10px;\n      font-size: 16px;\n      border-radius: 4px;\n\n      \\${props => props.primary && css\\`\n        background: steelblue;\n        color: white;\n      \\`}\n    \\`\n\n    render(\n      <>\n        <Button>Normal Button</Button>\n        <Button primary>Primary Button</Button>\n      </>\n    )\n    `,\n  },\n]\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Layout from '../components/Layout'\nimport LiveRunner from '../components/LiveRunner'\nimport examples from '../../examples'\n\nconst Title = styled.h3`\n  color: steelblue;\n`\n\nconst Page = () => (\n  <Layout>\n    {examples.map(({ key, title, code, scope }) => (\n      <React.Fragment key={key}>\n        <Title id={key}>{title}</Title>\n        <LiveRunner code={code} scope={scope} />\n      </React.Fragment>\n    ))}\n  </Layout>\n)\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.header`\n  background: steelblue;\n  color: #fff;\n`\n\nconst Nav = styled.nav`\n  height: 50px;\n  max-width: 900px;\n  margin: auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst Link = styled.a`\n  color: #fff;\n  text-decoration: none;\n\n  &:hover {\n    color: #eee;\n  }\n`\n\nconst Title = styled.h1`\n  margin: 10px 0;\n`\n\nconst Header = () => (\n  <Container>\n    <Nav>\n      <Link href=\"https://nihgwu.github.io/react-runner/\">\n        <Title>react-runner</Title>\n      </Link>\n      <Link href=\"https://github.com/nihgwu/react-runner\">Github</Link>\n    </Nav>\n  </Container>\n)\n\nexport default Header\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport styled, { createGlobalStyle } from 'styled-components'\n\nimport Header from './Header'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: sans-serif;\n    font-size: 16px;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`\n\nconst Body = styled.div`\n  flex: 1;\n  overflow-y: auto;\n`\n\nconst Content = styled.div`\n  margin: 20px auto;\n  max-width: 900px;\n`\n\nconst Layout = ({ children }) => (\n  <Container>\n    <GlobalStyle />\n    <Helmet\n      title=\"react-runner\"\n      meta={[\n        {\n          name: 'description',\n          content: 'Preview your React component the easy way',\n        },\n        {\n          name: 'keywords',\n          content: 'react, component, preview, runner, live',\n        },\n      ]}\n    />\n    <Header />\n    <Body>\n      <Content>{children}</Content>\n    </Body>\n  </Container>\n)\n\nexport default Layout\n"],"sourceRoot":""}